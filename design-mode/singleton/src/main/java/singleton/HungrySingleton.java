package singleton;
/**
 *  饿汉式单例</br>
 *  该模式特点是：类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。	</br>
 *  该模式优点是：节省内存资源、保证数据内容的一致性，对某些类只创建一个实例。				</br>
 *  该模式缺点是：保证线程安全，但是每次访问时都要同步，会影响性能，且消耗更多的资源。			</br>
 *  两步完成 1. 私有构造器，避免类在外部被实例化; 2. 保证 instance 在所有线程中同步。				</br>
 *  注意：饿汉式单例在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以是线程安全的，可以直接用于多线程而不会出现问题。<br>
* @author lkh
*/
public class HungrySingleton {

}
